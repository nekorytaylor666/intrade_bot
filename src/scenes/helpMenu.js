const Scene = require('telegraf/scenes/base');
const Extra = require('telegraf/extra');
const Markup = require('telegraf/markup');

const helpScene = new Scene('help');

//menu scene enter
helpScene.enter(ctx => {
  if (typeof ctx.session.user === 'undefined') {
    return ctx.scene.enter('auth');
  }
  return ctx.reply(
    '–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –Ω–∞–π—Ç–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –≥–¥–µ –∏ –∫–æ–≥–¥–∞ —É–≥–æ–¥–Ω–æ.',
    Markup.keyboard([
      ['üí° –û —Å–µ—Ä–≤–∏—Å–µ'],
      ['üó£ –ó–∞–∫–∞–∑—á–∏–∫–∞–º', 'üë§ –ü–æ—Å—Ç–∞–≤—â–∏–∫–∞–º'],
      ['üìö –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π'],
      ['‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'],
    ])
      .oneTime()
      .resize()
      .extra(),
  );
});

helpScene.hears('üí° –û —Å–µ—Ä–≤–∏—Å–µ', ctx => {
  ctx.scene.enter('about');
});

helpScene.hears('üó£ –ó–∞–∫–∞–∑—á–∏–∫–∞–º', ctx => {
  ctx.scene.enter('forCustomers');
});

helpScene.hears('üë§ –ü–æ—Å—Ç–∞–≤—â–∏–∫–∞–º', ctx => {
  ctx.scene.enter('forProviders');
});

helpScene.hears('üìö –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π', ctx => {
  ctx.scene.enter('faq');
});

helpScene.hears('‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', ctx => {
  ctx.scene.enter('menu');
});

helpScene.use(ctx => {
  ctx.reply('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é.');
});

module.exports = helpScene;
